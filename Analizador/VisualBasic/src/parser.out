Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> module
Rule 1     module -> import
Rule 2     args -> ARGS
Rule 3     readline -> CONSOLE PUNTO WRITELINE PIZQ ID PDER
Rule 4     boolean -> BOOLEAN
Rule 5     import -> IMPORTS ( ident ) ;
Rule 6     main -> SUB MAIN PIZQ ARGS AS STRING PIZQ PDER PDER
Rule 7     constDecl -> DIM id IGUAL ID
Rule 8     constDecl -> empty
Rule 9     constAssignmentList -> ID ASSIGN NUMERO
Rule 10    constAssignmentList -> constAssignmentList COMMA ID ASSIGN NUMERO
Rule 11    varDecl -> VAR identList
Rule 12    varDecl -> empty
Rule 13    identList -> ID
Rule 14    identList -> identList COMMA ID
Rule 15    procDecl -> procDecl PROCEDURE ID block
Rule 16    procDecl -> empty
Rule 17    statement -> ID UPDATE expression
Rule 18    statement -> CALL ID
Rule 19    statement -> BEGIN statementList END
Rule 20    statement -> IF condition THEN statement
Rule 21    statement -> WHILE condition DO statement
Rule 22    statement -> empty
Rule 23    statementList -> statement
Rule 24    statementList -> statementList statement
Rule 25    condition -> expression
Rule 26    condition -> expression relation expression
Rule 27    relation -> ASSIGN
Rule 28    relation -> NOIGUAL
Rule 29    relation -> MENORQ
Rule 30    relation -> MAYORQ
Rule 31    relation -> TRUE
Rule 32    relation -> FALSE
Rule 33    expression -> term
Rule 34    expression -> addingOperator term
Rule 35    expression -> expression addingOperator term
Rule 36    expression -> DATETIME PUNTO NOW
Rule 37    expression -> LLIZQ ID LLDER
Rule 38    expression -> VBCRLF
Rule 39    expression -> MODULE PROGRAM
Rule 40    expression -> END MODULE
Rule 41    expression -> CONSOLE PUNTO READKEY PIZQ relation PDER
Rule 42    expression -> DIM id IGUAL CONSOLE PUNTO READLINE PIZQ PDER
Rule 43    addingOperator -> SUMA
Rule 44    addingOperator -> RESTA
Rule 45    addingOperator -> MOD
Rule 46    term -> factor
Rule 47    term -> term multiplyingOperator factor
Rule 48    multiplyingOperator -> MULTI
Rule 49    multiplyingOperator -> DIV
Rule 50    factor -> ID
Rule 51    factor -> NUMERO
Rule 52    factor -> PIZ expression PDER
Rule 53    empty -> <empty>

Terminals, with rules where they appear

(                    : 5
)                    : 5
;                    : 5
ARGS                 : 2 6
AS                   : 6
BOOLEAN              : 4
CONSOLE              : 3 41 42
DATETIME             : 36
DIM                  : 7 42
DIV                  : 49
END                  : 19 40
FALSE                : 32
ID                   : 3 7 9 10 13 14 15 17 18 37 50
IGUAL                : 7 42
IMPORTS              : 5
LLDER                : 37
LLIZQ                : 37
MAIN                 : 6
MAYORQ               : 30
MENORQ               : 29
MOD                  : 45
MODULE               : 39 40
MULTI                : 48
NOIGUAL              : 28
NOW                  : 36
NUMERO               : 9 10 51
PDER                 : 3 6 6 41 42 52
PIZQ                 : 3 6 6 41 42
PROGRAM              : 39
PUNTO                : 3 36 41 42
READKEY              : 41
READLINE             : 42
RESTA                : 44
STRING               : 6
SUB                  : 6
SUMA                 : 43
TRUE                 : 31
UPDATE               : 17
VBCRLF               : 38
WRITELINE            : 3
error                : 

Nonterminals, with rules where they appear

ASSIGN               : 9 10 27
BEGIN                : 19
CALL                 : 18
COMMA                : 10 14
DO                   : 21
IF                   : 20
PIZ                  : 52
PROCEDURE            : 15
THEN                 : 20
VAR                  : 11
WHILE                : 21
addingOperator       : 34 35
args                 : 
block                : 15
boolean              : 
condition            : 20 21
constAssignmentList  : 10
constDecl            : 
empty                : 8 12 16 22
expression           : 17 25 26 26 35 52
factor               : 46 47
id                   : 7 42
ident                : 5
identList            : 11 14
import               : 1
main                 : 
module               : 0
multiplyingOperator  : 47
procDecl             : 15
readline             : 
relation             : 26 41
statement            : 20 21 23 24
statementList        : 19 24
term                 : 33 34 35 47
varDecl              : 

